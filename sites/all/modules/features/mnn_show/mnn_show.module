<?php
/**
 * @file
 * Code for the MNN Show Import feature.
 */

include_once('mnn_show.features.inc');

define('MNN_PROJECT_OG_FIELD_FOR_SHOW','og_node2');

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mnn_show_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'cm_show_node_form') {
    $show_node = (isset($form['#node']) && $form['#node']->nid) ? 
      $form['#node'] : NULL; 
    $project_id_from_query_string = 
      filter_input(INPUT_GET, CM_PROJECT_ID_QUERY_ARGUMENT_NAME);

    if ($show_node) {
      $project_field_on_show = &$show_node->{MNN_PROJECT_OG_FIELD_FOR_SHOW};
      $project_id = ($project_field_on_show) ?
	$project_field_on_show[LANGUAGE_NONE][0]['target_id'] : NULL;
    }
    else if ($project_id_from_query_string) {
      $project_id = $project_id_from_query_string;
    }
    if ($project_id) {
      $project_node = node_load($project_id);
      if ($project_node) {
	$default_project_for_show = $project_node->title." (".$project_id.")"; 
	if (!$show_node) {
	  cm_project_synch_fields_for_child($form, $project_node);
	}
      }       
    }

    $project_widget = &$form[MNN_PROJECT_OG_FIELD_FOR_SHOW][LANGUAGE_NONE][0];
    $default_sub_field =  &$project_widget['default'][0]['target_id'];
    $admin_sub_field =  &$project_widget['admin'][0]['target_id'];
    
    if ($default_project_for_show) {
      $form['title']['#type'] = "hidden";
      $form['title']['#value'] = NULL;

      $default_sub_field['#value'] = NULL;
      $admin_sub_field['#value'] = $default_project_for_show;
      $default_sub_field['#type'] = "hidden";
      $admin_sub_field['#type'] = "hidden";
      $form[MNN_PROJECT_OG_FIELD_FOR_SHOW]['cm_project_picker_title'] = 
	array('#markup' => 
	    "<div class='cm-box'><h2>Project</h2><big><strong>".
	    l($project_node->title, "node/".$project_id).
	    "</big></strong><br/><br/></div>",
	    '#weight' => -100);
    }
    else {
      $default_sub_field['#value'] = NULL;
      $admin_sub_field['#value'] = NULL;
      $admin_sub_field['#default_value'] = NULL;
      $admin_sub_field['#default_value'] = NULL;
      $default_sub_field['#type'] = "hidden";
      $default_sub_field['#type'] = "hidden";
      $form['title']['#type'] = "hidden";
      $form['title']['#value'] = NULL;
      drupal_set_message(t("You must use the project picker to add a show."),
			 'error');
    }

    if (!$show_node) {
      $airings = mnn_show_airings_for_project($project_id);
    }

    if (isset($airings)) {
      $form['mnn_cm_airing'] = 
	array(
	      '#type' => 'select',
	      '#options'=> $airings,
	      '#prefix' => '<div id="mnn_cm_airing_wrapper" class="cm-box">'.
	      "<h2>".t('Air Date')."</h2>",
	      '#suffix' => '</div>',
	      );
      if (module_exists('mnn_qnap_show')) {
	$results = db_query("SELECT xid, filename FROM mnn_qnap_show ".
			    "WHERE show_nid IS NULL ");
	while ($result = $results->fetchObject()) {
	  $xml_files[$result->xid] = $result->filename;
	}
	$xml_files = $xml_files +
	  array( 0 =>'- Select -') +
	  array('exact' => 'Exact Match:') +
	  array('project' => 'Project Matches:') +
	  array('orphan' => 'Unmatched Files:');

	$form['mnn_cm_xml_files'] = 
	  array(
		'#type' => 'select',
		'#options'=> $xml_files,
		'#prefix' => '<div id="mnn_cm_xml_wrapper" class="cm-box">'.
		"<h2>".t('XML File on QNAP')."</h2>",
		'#suffix' => '</div>',
		);
      }
      
    }
    if (!$show_node) {
      $episode_number = mnn_show_get_next_episode_number($project_id);
      $form['field_episode_number'][LANGUAGE_NONE][0]
        ['value']['#default_value'] = $episode_number;
    }

    /////////////////////////////////////////////////////////////////////////
    //HIDE PREMIERE DATE AND CHANNELS FIELDS AS WE WILL AUTO SET THEM
    unset($form['field_show_channels']);
    unset($form['field_show_premiere_date']);
  }
}
function mnn_show_node_validate($node, $form, &$form_state) {
  if ($node->type=='cm_show') {
    $project_id = $node->{MNN_PROJECT_OG_FIELD_FOR_SHOW};
    $project_id = $project_id[LANGUAGE_NONE][0]['target_id'];

    $show_id = ($node->nid) ? $node->nid : NULL;

    $episode_number = $node->field_episode_number[LANGUAGE_NONE][0]['value'];

    $existing_show_id = 
      mnn_show_get_existing_show_for_episode_number($project_id,
						    $show_id,
						    $episode_number);
    $existing_show = node_load($existing_show_id);
    if($existing_show) {
      form_set_error('field_episode_number', 
  		   t("That episode number is already in use. ").
		   l($existing_show->title, "node/".$existing_show->nid));
    }

    //don't allow new shows to be added to inactive projects
    if (!$show_id) {
      $project = node_load($project_id);

      if (!$project->group_group[LANGUAGE_NONE][0]['value']) {
	form_set_error(MNN_PROJECT_OG_FIELD_FOR_SHOW,
		       t("This project is not active. The project must be 
                          active to add new shows"));
      }
    }
  }
}

function mnn_show_get_existing_show_for_episode_number($project_id,
						       $show_id,
						       $episode_number){
  $sql = 
    "SELECT s.nid as existing_show_id
     FROM {node} s
     LEFT JOIN {og_membership} og_membership 
       ON (s.nid = og_membership.etid AND 
           og_membership.entity_type = 'node') 
     LEFT JOIN {node} p 
       ON og_membership.gid = p.nid
     INNER JOIN {field_data_field_episode_number} epnum
       ON epnum.revision_id=s.vid
     WHERE (p.nid = $project_id )
       AND (s.status = '1') 
       AND (s.type IN  ('cm_show'))
       AND (epnum.field_episode_number_value = :episode_number)";
  $params = array(':episode_number'=>$episode_number);
  if ($show_id) {
    $sql .= " AND (s.nid != :show_id)";
    $params[':show_id'] = $show_id;
  }

  
  $result = db_query($sql, $params)->fetchObject();
  return $result->existing_show_id;;
}

function mnn_show_get_next_episode_number($project_id) {
  $sql = 
    "SELECT (max(convert(epnum.field_episode_number_value,unsigned)) + 1) 
       AS episode_number
     FROM {node} s
     LEFT JOIN {og_membership} og_membership 
       ON (s.nid = og_membership.etid AND 
           og_membership.entity_type = 'node') 
     LEFT JOIN {node} p 
       ON og_membership.gid = p.nid
     INNER JOIN field_data_field_episode_number epnum
       ON epnum.revision_id=s.vid
     WHERE (p.nid = :project_id )
       AND (s.status = '1') 
       AND (s.type IN  ('cm_show'))
     ORDER BY epnum.field_episode_number_value desc";
  $result = db_query($sql, array(':project_id'=>$project_id))->fetchObject();
  $episode_number = $result->episode_number ? $result->episode_number : 1;
  return $episode_number;

  
}

function mnn_show_og_node2_callback($form, $form_state) {
  return $form['mnn_cm_airing'];
}



function mnn_show_node_presave($node) {
  if ($node->type=='cm_show') {
    //SET THE TITLE
    //FIXME USE PUBLIC TITLE INSTEAD)
    $public_title = mnn_show_get_single_field_value($node,
						    'field_show_public_title',
						    'value');
    $episode_number = $node->field_episode_number ?
      $node->field_episode_number[LANGUAGE_NONE][0]['value'] : "";
    $project_id = $node->{MNN_PROJECT_OG_FIELD_FOR_SHOW} ?
      $node->{MNN_PROJECT_OG_FIELD_FOR_SHOW}[LANGUAGE_NONE][0]['target_id']:"";
    $project = node_load($project_id);
    $project_title = $project->title;

    $node->title = ($public_title) ? 
      $project->title." Episode ".$episode_number.": ".$public_title :
      $project->title." Episode ".$episode_number;

    $node->title = substr($node->title, 0, 254);
    //RESAVE ALL RELATED AIRINGS
    if ($node->nid) {
      $airings = mnn_show_airings_for_show($node->nid);
      foreach($airings as $airing_id) {
	$airings = entity_load('airing', array($airing_id));
	$airing = array_pop($airings);
	if ($airing) {
	  $airing->cm_use_auto_title = TRUE;
	  $airing->cm_use_auto_endtime = TRUE;
	  //FIXME SHOULD CHANGE THIS NAME TO FIT BOTH UPDATE AND CREATE
	  $airing->cm_newly_created_show = $node;
	  entity_save('airing', $airing);
	}
      }
    }
    /////////////////////////////////////////////////////////////////////////
    //SET PREMIERE DATE AND CHANNELS FIELDS AS WE WILL AUTO SET THEM
    $node->field_show_channels[LANGUAGE_NONE][0]['value'] =
      mnn_show_get_channels($node);
//dsm($node);
//dsm($show);
    $date = mnn_show_get_premiere_date($node);
    if ($date) {
      $node->field_show_premiere_date[LANGUAGE_NONE][0]['value'] =
	$date;
    }

    
    $node->uid = $project->uid;
  }
}


function mnn_show_node_insert($node) {
  if ($node->type=='cm_show') {
    $airing_id = (isset($node->mnn_cm_airing) && $node->mnn_cm_airing) ?
      $node->mnn_cm_airing : NULL;

    if ($airing_id) {
      $airings = entity_load('airing', array($airing_id));
      $airing = array_pop($airings);
      if ($airing) {
        $airing->field_airing_show_ref[LANGUAGE_NONE][0]['target_id'] = 
	  $node->nid; 
	$airing->cm_use_auto_title = TRUE;
	$airing->cm_use_auto_endtime = TRUE;
	$airing->cm_newly_created_show = $node;
        entity_save('airing', $airing);
      }
      if (module_exists('mnn_qnap_show')) {
	global $user;
	
	$xid = (isset($node->mnn_cm_xml_files) && $node->mnn_cm_xml_files) ?
	  $node->mnn_cm_xml_files : NULL;

	$record = mnn_qnap_show_get_record($xid);
	$record['project_nid'] =
	  $airing->field_airing_project_ref[LANGUAGE_NONE][0]['target_id'];
	
	$record['show_nid'] = $node->nid;
	$record['airing_id'] = $airing_id;
	$record['status'] = MNN_QNAP_SHOW_QUEUED;
	$record['uid'] = $user->uid;

	mnn_qnap_write_records(array($xid=>$record), TRUE, $node);
      }
    }
  }
}
/**
 *  This function is called after a Project has been selected, it will
 *  return a dropdown of airings for a project.
 */
function mnn_show_airings_for_project($project_id = NULL) {
  $airdates = array(0=>"- Select a value -");;

  $results = db_query(
    "SELECT a.airing_id,td.name as channel, at.field_airing_date_value
     FROM {cm_airing} a
     INNER JOIN {field_data_field_airing_date} at 
      ON a.airing_id=at.entity_id
     INNER JOIN {field_data_field_airing_project_ref} p
       ON p.entity_id=at.entity_id
     LEFT JOIN {field_data_field_airing_show_ref} s
       ON s.entity_id = at.entity_id
     INNER JOIN {field_data_field_airing_channel} c
       ON a.airing_id = c.entity_id
     INNER JOIN {taxonomy_term_data} td
       ON td.tid = c.field_airing_channel_tid
     WHERE p.field_airing_project_ref_target_id = :pid
       AND s.field_airing_show_ref_target_id is NULL
       AND at.field_airing_date_value > CURDATE() 
     ORDER BY at.field_airing_date_value asc
     ", array(':pid'=>$project_id));
  
  while ($airdate = $results->fetchObject()) {
    $txt = date('m-d-y h:ia', 
		strtotime($airdate->field_airing_date_value))." ".$airdate->channel;
    $airdates[$airdate->airing_id] = $txt;
  }

  return $airdates;
}


/**
 *  THIS WILL RETURN ALL THE AIRING FOR A SHOW
 */
function mnn_show_airings_for_show($show_id = NULL) {
  $ret = array();
  $results = db_query(
    "SELECT a.airing_id
     FROM {cm_airing} a
     LEFT JOIN {field_data_field_airing_show_ref} s
       ON s.entity_id = a.airing_id
     WHERE s.field_airing_show_ref_target_id = :sid
     ", array(':sid'=>$show_id));

  while ($airdate = $results->fetchObject()) {
    $ret[$airdate->airing_id] = $airdate->airing_id;
  }
  
  return $ret;
}


function mnn_show_node_access($node, $op, $account) {

  $type = is_string($node) ? $node : $node->type;

  if ($type == 'cm_show' && $op == 'update') {
    if (user_access('edit any ' . $type . ' content', $account) ||
	(user_access('edit own ' . $type . ' content', $account) &&
	 ($account->uid == $node->uid))) {
      return NODE_ACCESS_ALLOW;
    }
    else {
      return NODE_ACCESS_DENY;
    }
  }
  
  if ($type == 'cm_show' && $op == 'delete') {
    if (user_access('delete any ' . $type . ' content', $account) ||
	(user_access('delete own ' . $type . ' content', $account) &&
	 ($account->uid == $node->uid))) {
      return NODE_ACCESS_ALLOW;
    }
    else {
      return NODE_ACCESS_DENY;
    }
  }
  
  return NODE_ACCESS_IGNORE;
}

function mnn_show_get_premiere_date($show) {
  $start = strtotime('now');

  $sql =
    "SELECT min(dt.field_airing_date_value)
     FROM {cm_airing} a
     INNER JOIN {field_data_field_airing_show_ref} s
       ON s.entity_id = a.airing_id
     INNER JOIN {field_data_field_airing_date} dt
       ON dt.entity_id=s.entity_id
     INNER JOIN {field_data_field_airing_type} tp
       ON tp.entity_id=s.entity_id
     WHERE s.field_airing_show_ref_target_id = :sid
     AND (tp.field_airing_type_tid = 969 or 
          tp.field_airing_type_tid = 973 or 
          tp.field_airing_type_tid = 972)
     ";

  $args = array(':sid'=>$show->nid);
  
  $ret = array();
  $results = db_query($sql, $args);
  
  $date = $results->fetchField();

  return $date;

}

function mnn_show_get_channels($show) {
  $start = strtotime('now');
  $channels = array();

  $sql =
    "SELECT DISTINCT ch.field_airing_channel_tid as tid
     FROM {cm_airing} a
     INNER JOIN {field_data_field_airing_show_ref} s
       ON s.entity_id = a.airing_id
     INNER JOIN {field_data_field_airing_channel} ch
       ON ch.entity_id=s.entity_id
     WHERE s.field_airing_show_ref_target_id = :sid
     ";

  $args = array(':sid'=>$show->nid);
  
  $ret = array();
  $results = db_query($sql, $args);

  while ($result = $results->fetchObject()) {
    $channel = taxonomy_term_load($result->tid);
    $channels[] = $channel->name;
  }
  return implode(', ', $channels);
}

/**
  * Helper function to get a single value off of a entity 
 */
function mnn_show_get_single_field_value($entity, 
					 $field_name,
					 $index = 'value') {
  if (isset($entity->{$field_name})) {
    $field = $entity->{$field_name};
    if (isset($field[LANGUAGE_NONE]) &&
        isset($field[LANGUAGE_NONE][0]) &&
        isset($field[LANGUAGE_NONE][0][$index])) {
      return $field[LANGUAGE_NONE][0][$index];
    }
  }
  return NULL;
}
