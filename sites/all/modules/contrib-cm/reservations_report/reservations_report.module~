<?php

function reservations_report_views_api() {
  return array(
               'api' => 3,
               'path' =>
               drupal_get_path('module',
                               'reservations_report').'/inc'
               );
}


function reservations_report_usage_counts_report_header() {
    
  $view = views_get_current_view();
  $results = $view->result;

  $data = array();
  $types = array();
  $items = array();
  $total_hours = 0;
  $total_value = 0;
  $total_uses = 0;

  foreach ($results as $view_data) {

    $reservation_nid = $view_data->nid;
    $reservation = $reservation_nid ? node_load($reservation_nid) : NULL;

    $item_nid = $view_data->node_reservations_reservation_detail_nid;
    $item = $item_nid ? node_load($item_nid) : NULL;
    
    if ($item) {
      if (!isset($items[$item_nid])) {
	$items[$item_nid] = $item->title;
      }

      $type = reservations_content_types($item->type);
      if (!isset($types[$type['type']])) {
	$types[$type['type']] = node_type_get_name($item);;
      }

      $grouping_tid = $type['reservations_grouping'];
      $category = $grouping_tid ? taxonomy_term_load($grouping_tid) : NULL;
      $data[$category->name] = 
	$data[$category->name] ? $data[$category->name] : array();

      $data[$category->name][$type['type']] = $data[$category->name][$type['type']] ? 
	$data[$category->name][$type['type']] : array();

      $item_index = $item->title . "||||" . $item_nid;

      $data[$category->name][$type['type']][$item_index] = 
	$data[$category->name][$type['type']][$item_index] ? 
	$data[$category->name][$type['type']][$item_index] : 
	array('count' => 0,'hours' => 0,'value' => 0);

      //increase the count by 1
      $data[$category->name][$type['type']][$item_index]['count']++;
      $total_uses ++;

      //find number of hours
      $date = $view_data->field_field_reservations_date[0]['raw'];
      $start_ts = new DateTime($date['value']);
      $start_ts = $start_ts->getTimestamp();
      $end_ts = new DateTime($date['value2']);
      $end_ts = $end_ts->getTimestamp();

      $hours = ($end_ts-$start_ts)/(60*60);

      $data[$category->name][$type['type']][$item_index]['hours'] += $hours;
      $total_hours += $hours;

      $data[$category->name][$type['type']][$item_index]['value'] += 
	$hours * $type['reservations_rate_per_hour'];
      $total_value += $hours * $type['reservations_rate_per_hour'];
    }

      /*
       dsm($view_data, 'vd');
       dsm($reservation, 'res');
       dsm($category->name, 'cat');
       dsm($type, 'type');
       dsm($item, 'item');
       break;
      */
  }

  foreach($data as $category=>$data_types) {
    foreach($data_types as $type=>$data_items) {
      ksort($data[$category][$type]);
    }
    ksort($data[$category]);
  }
  ksort($data);
  
  $headers = array(
		   t("Item Type"),
		   t("Item Title"),
		   t("Number of Uses"),
		   t("Hours of Use"),
		   t("Dollar Value"),
		   );
  
  $rows = array();
  foreach($data as $category=>$data_types) {
    $row = array(array('colspan' => 5,
		       'data' => "<h2>$category</h2>"));
    $rows[] = $row;

    $category_usage_total = $category_hours_total = $category_value_total = 0;

    foreach($data_types as $type=>$data_items) {
      foreach($data_items as $index => $item_info) {
	$row = array();
	$item_array = explode('||||', $index);
	$row[] = $types[$type];
	$row[] = $item_array[0];

	foreach($item_info as $key=>$value) {
	  $category_usage_total += ($key == 'count') ? $value : 0;
	  $category_hours_total += ($key == 'hours') ? $value : 0;
	  $category_value_total += ($key == 'value') ? $value : 0;
	  $value = ($key == 'value') ? "$".$value : $value;
	  $row[] = array('data' => $value);
	}
	$rows[] = $row;
      }
    }
    $category_value_total = "$".$category_value_total;

    $row = array("&nbsp;","<h4>Category Totals</h4>",$category_usage_total, 
		 $category_hours_total, $category_value_total);
    $rows[] = $row;
		 
  }

  $total_value = ($key == 'total_value') ? "$".  $total_value : $total_value;
  
  $row = array("<h2>Grand Totals</h2>","&nbsp;",$total_uses, 
	       $total_hours, "$".$total_value);

  $rows[] = $row;


  $ret = theme('table', array('header' => $headers, 'rows' => $rows));
  $ret .= "<br/><br/><hr><br/><h2>Filters and Raw Data</h2><br/><br/>";
 
  return $ret;
}


function reservations_reports_hourly_breakdown_report_header() {
    
  $view = views_get_current_view();
  $results = $view->result;

  $data = array();
  $types = array();
  $items = array();
  $total_hours = 0;
  $total_value = 0;
  $total_uses = 0;

  //FIXME, SET FROM EXISTING OR NEW SETTINGS VARIABLES
  $start = 9;
  $length = 2;
  $end = 22;
  $inclusion_type = 'strict';

  $hour_blocks = array();

  $dows = array('Sunday' => 0,
		'Monday' => 0,
		'Tuesday' => 0,
		'Wednesday' => 0,
		'Thursday' => 0,
		'Friday' => 0,
		'Saturday' => 0,
		);

  $i = 0;
  while ($i < 24) {
    if ($i < $start) {
      $hour_blocks[$start] = $dows;
      $i = $start + $length;
    }
    else if ($i == $end) {
      $hour_blocks[$end] = $dows;
      break;
    }
    else if ($i > $end) {
      break;
    }
    else {
      $hour_blocks[$i] = $dows;
      $i += $length;
    }
  } 

  dsm($hour_blocks, 'blocks');

  foreach ($results as $view_data) {

    $reservation_nid = $view_data->nid;
    $reservation = $reservation_nid ? node_load($reservation_nid) : NULL;

    $item_nid = $view_data->node_reservations_reservation_detail_nid;
    $item = $item_nid ? node_load($item_nid) : NULL;
    
    if ($item) {
      $date = $view_data->field_field_reservations_date[0]['raw'];
      dsm($date, 'df');

      $start_object = new DateTime($date['value'],
				   new DateTimeZone($date['timezone_db']));
      $start_object->setTimeZone(new DateTimeZone($date['timezone']));

      $end_object = new DateTime($date['value'],
				   new DateTimeZone($date['timezone_db']));
      $end_object->setTimeZone(new DateTimeZone($date['timezone']));

      $start_hour = $start_object->format('H');

      
    }

    dsm($start_hour, 'sh');
    dsm($start_object, 'so');
    dsm($end_object, 'vd');
    dsm($reservation, 'res');
    dsm($item, 'item');
    break;
    
  }

  $headers = array('Hour', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 
		   'Thursday', 'Friday', 'Saturday', 'Total');

  $rows = array();
  $grand_total = 0;
  $dow_counts = array();
  foreach ($hour_blocks as $hour => $dows) {
    $row = array($hour);
    $total = 0;
    foreach($dows as $dow=>$count) {
      $dow_counts[$dow] = isset($dow_counts[$dow]) ? $dow_counts[$dow] :  0;
      $total += $count;
      $grand_total += $count;
      $dow_counts[$dow] += $count;
      $row[] = $count;
    }
    $row[] = $total;
    $rows[] = $row;
  }

  $row = array("<strong>Totals</strong>");
  dsm($dow_counts, 'dc');
  foreach ($dow_counts as $dow =>$count) {
    $row[] = $count;
  }
  $row[] = $grand_total;
  $rows[] = $row;

  $ret = theme('table', array('header' => $headers, 'rows' => $rows));
  $ret .= "<br/><br/><hr><br/><h2>Filters and Raw Data</h2><br/><br/>";

  return $ret;
}